# line 1 "lib/keyword_search.rl"
require File.dirname(__FILE__) << '/keyword_search/definition.rb'

module KeywordSearch

  class ParseError < ::SyntaxError; end  
      
  class << self
  
    # line 73 "lib/keyword_search.rl"

    
    def search(input_string, definition=nil, &block)
      definition ||= Definition.new(&block)
      results = parse(input_string)
      results.each do |key, terms|
        definition.handle(key, terms)
      end
      results
    end
    
    #######
    private
    #######
    
    def parse(input) #:nodoc:
      data = input + ' '
      
# line 30 "lib/keyword_search.rb"
class << self
	attr_accessor :_parser_actions
	private :_parser_actions, :_parser_actions=
end
self._parser_actions = [
	0, 1, 0, 1, 4, 1, 7, 1, 
	9, 2, 3, 1, 2, 3, 4, 2, 
	3, 8, 2, 4, 8, 3, 0, 3, 
	4, 3, 0, 3, 8, 3, 3, 4, 
	0, 3, 3, 4, 8, 3, 3, 8, 
	0, 3, 5, 0, 2, 3, 5, 2, 
	7, 3, 6, 0, 2, 3, 6, 2, 
	7
]

class << self
	attr_accessor :_parser_key_offsets
	private :_parser_key_offsets, :_parser_key_offsets=
end
self._parser_key_offsets = [
	0, 0, 8, 13, 21, 26, 31, 36, 
	37, 38, 40, 41, 42, 47, 53, 60, 
	66, 68, 76, 77, 78, 82, 87, 88, 
	89, 96, 103, 110, 112, 114, 119, 124, 
	129, 136, 142, 150, 157, 164, 171, 179, 
	186, 194, 202, 204, 209, 217, 224, 232, 
	240, 246, 254, 261, 268, 276, 283, 290, 
	297, 304, 312, 314, 316, 321, 326, 331, 
	338, 344, 352, 359, 366, 373, 381, 388, 
	396, 398, 403, 411, 418, 426, 433, 441, 
	449, 457, 464, 469, 475, 482, 488, 496, 
	497, 498, 502, 507, 508, 509, 516, 523, 
	530, 532, 534, 539, 544, 549, 556, 562, 
	570, 577, 584, 591, 599, 606, 614, 616, 
	621, 629, 636, 644, 652, 658, 666, 673, 
	680, 688, 695, 702, 709, 716, 724, 726, 
	728, 733, 738, 743, 750, 756, 764, 771, 
	778, 785, 793, 800, 808, 810, 815, 823, 
	830, 838, 845, 853, 861, 869, 876, 881, 
	886, 891, 896, 902, 909, 915, 923, 924, 
	925, 929, 934, 935, 936, 943, 950, 957, 
	959, 961, 966, 971, 976, 983, 989, 997, 
	1004, 1011, 1018, 1026, 1033, 1041, 1049, 1051, 
	1056, 1064, 1071, 1079, 1087, 1093, 1101, 1108, 
	1116, 1123, 1130, 1137, 1139, 1141, 1146, 1151, 
	1156, 1163, 1169, 1177, 1184, 1191, 1198, 1203, 
	1210, 1216, 1224, 1231, 1238, 1245, 1247, 1252, 
	1259, 1266, 1272, 1280, 1287, 1294, 1301, 1303, 
	1305, 1310, 1315, 1320, 1327, 1333, 1341, 1348, 
	1355, 1362, 1370, 1377, 1385, 1393, 1395, 1400, 
	1408, 1415, 1423, 1431, 1433, 1438, 1446, 1453, 
	1461, 1463, 1468, 1476, 1483, 1491, 1499, 1501, 
	1506, 1514, 1521, 1529, 1536, 1543, 1550, 1557, 
	1565, 1572, 1574, 1576, 1581, 1586, 1591, 1598, 
	1604, 1612, 1619, 1626, 1633, 1641, 1648, 1656, 
	1664, 1666, 1671, 1679, 1687, 1694, 1701, 1709, 
	1716, 1724, 1731, 1739, 1747, 1755, 1762, 1767, 
	1773, 1781, 1788, 1795, 1803, 1810, 1818, 1826, 
	1834, 1841, 1846, 1851, 1856, 1861, 1866
]

class << self
	attr_accessor :_parser_trans_keys
	private :_parser_trans_keys, :_parser_trans_keys=
end
self._parser_trans_keys = [
	0, 32, 34, 39, 40, 43, 45, 58, 
	0, 32, 34, 41, 58, 0, 32, 34, 
	39, 40, 43, 45, 58, 0, 32, 34, 
	41, 58, 32, 34, 39, 40, 58, 0, 
	32, 34, 41, 58, 34, 34, 0, 32, 
	39, 39, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 0, 32, 32, 34, 39, 40, 
	41, 44, 58, 124, 34, 34, 32, 41, 
	44, 124, 32, 34, 39, 40, 58, 39, 
	39, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 34, 39, 
	34, 39, 32, 39, 41, 44, 124, 32, 
	34, 39, 40, 58, 32, 34, 41, 44, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 34, 39, 32, 34, 39, 40, 
	58, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 39, 34, 39, 32, 39, 41, 44, 
	124, 32, 34, 39, 40, 58, 32, 34, 
	41, 44, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 34, 39, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 58, 32, 34, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 34, 32, 41, 44, 124, 32, 34, 
	39, 40, 58, 39, 39, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 34, 39, 34, 39, 32, 39, 
	41, 44, 124, 32, 34, 39, 40, 58, 
	32, 34, 41, 44, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 34, 39, 
	32, 34, 39, 40, 58, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 34, 39, 34, 39, 
	32, 39, 41, 44, 124, 32, 34, 39, 
	40, 58, 32, 34, 41, 44, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 39, 32, 34, 39, 40, 58, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	58, 32, 34, 39, 40, 58, 32, 34, 
	39, 40, 58, 32, 34, 39, 40, 58, 
	32, 34, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 34, 34, 32, 41, 44, 
	124, 32, 34, 39, 40, 58, 39, 39, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 34, 39, 34, 
	39, 32, 39, 41, 44, 124, 32, 34, 
	39, 40, 58, 32, 34, 41, 44, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 34, 39, 32, 34, 39, 40, 58, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 34, 39, 34, 39, 32, 39, 41, 
	44, 124, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	41, 44, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 34, 39, 32, 
	39, 41, 44, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 34, 39, 34, 
	39, 32, 39, 41, 44, 124, 32, 34, 
	39, 40, 58, 32, 34, 41, 44, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 34, 39, 32, 34, 39, 40, 58, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 34, 
	39, 32, 34, 39, 40, 58, 32, 34, 
	39, 40, 41, 44, 58, 124, 32, 34, 
	39, 40, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 34, 39, 32, 
	34, 39, 40, 58, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 34, 39, 32, 34, 39, 
	40, 58, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 41, 44, 58, 124, 
	32, 34, 39, 41, 44, 58, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	40, 44, 58, 124, 34, 39, 34, 39, 
	32, 39, 41, 44, 124, 32, 34, 39, 
	40, 58, 32, 34, 41, 44, 124, 32, 
	34, 39, 40, 44, 58, 124, 32, 34, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 44, 58, 
	124, 32, 34, 39, 40, 41, 44, 58, 
	124, 32, 34, 39, 40, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	32, 34, 39, 40, 41, 44, 58, 124, 
	34, 39, 32, 34, 39, 40, 58, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 40, 41, 44, 58, 124, 32, 
	34, 39, 41, 44, 58, 124, 32, 34, 
	39, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	41, 44, 58, 124, 32, 34, 39, 40, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 58, 32, 
	34, 41, 44, 58, 124, 32, 34, 39, 
	40, 41, 44, 58, 124, 32, 34, 39, 
	41, 44, 58, 124, 32, 34, 39, 41, 
	44, 58, 124, 32, 34, 39, 40, 41, 
	44, 58, 124, 32, 34, 39, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 40, 41, 44, 
	58, 124, 32, 34, 39, 41, 44, 58, 
	124, 32, 34, 39, 40, 58, 32, 34, 
	39, 40, 58, 0, 32, 34, 41, 58, 
	0, 32, 34, 41, 58, 0, 32, 34, 
	41, 58, 0
]

class << self
	attr_accessor :_parser_single_lengths
	private :_parser_single_lengths, :_parser_single_lengths=
end
self._parser_single_lengths = [
	0, 8, 5, 8, 5, 5, 5, 1, 
	1, 2, 1, 1, 5, 6, 7, 6, 
	2, 8, 1, 1, 4, 5, 1, 1, 
	7, 7, 7, 2, 2, 5, 5, 5, 
	7, 6, 8, 7, 7, 7, 8, 7, 
	8, 8, 2, 5, 8, 7, 8, 8, 
	6, 8, 7, 7, 8, 7, 7, 7, 
	7, 8, 2, 2, 5, 5, 5, 7, 
	6, 8, 7, 7, 7, 8, 7, 8, 
	2, 5, 8, 7, 8, 7, 8, 8, 
	8, 7, 5, 6, 7, 6, 8, 1, 
	1, 4, 5, 1, 1, 7, 7, 7, 
	2, 2, 5, 5, 5, 7, 6, 8, 
	7, 7, 7, 8, 7, 8, 2, 5, 
	8, 7, 8, 8, 6, 8, 7, 7, 
	8, 7, 7, 7, 7, 8, 2, 2, 
	5, 5, 5, 7, 6, 8, 7, 7, 
	7, 8, 7, 8, 2, 5, 8, 7, 
	8, 7, 8, 8, 8, 7, 5, 5, 
	5, 5, 6, 7, 6, 8, 1, 1, 
	4, 5, 1, 1, 7, 7, 7, 2, 
	2, 5, 5, 5, 7, 6, 8, 7, 
	7, 7, 8, 7, 8, 8, 2, 5, 
	8, 7, 8, 8, 6, 8, 7, 8, 
	7, 7, 7, 2, 2, 5, 5, 5, 
	7, 6, 8, 7, 7, 7, 5, 7, 
	6, 8, 7, 7, 7, 2, 5, 7, 
	7, 6, 8, 7, 7, 7, 2, 2, 
	5, 5, 5, 7, 6, 8, 7, 7, 
	7, 8, 7, 8, 8, 2, 5, 8, 
	7, 8, 8, 2, 5, 8, 7, 8, 
	2, 5, 8, 7, 8, 8, 2, 5, 
	8, 7, 8, 7, 7, 7, 7, 8, 
	7, 2, 2, 5, 5, 5, 7, 6, 
	8, 7, 7, 7, 8, 7, 8, 8, 
	2, 5, 8, 8, 7, 7, 8, 7, 
	8, 7, 8, 8, 8, 7, 5, 6, 
	8, 7, 7, 8, 7, 8, 8, 8, 
	7, 5, 5, 5, 5, 5, 0
]

class << self
	attr_accessor :_parser_range_lengths
	private :_parser_range_lengths, :_parser_range_lengths=
end
self._parser_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :_parser_index_offsets
	private :_parser_index_offsets, :_parser_index_offsets=
end
self._parser_index_offsets = [
	0, 0, 9, 15, 24, 30, 36, 42, 
	44, 46, 49, 51, 53, 59, 66, 74, 
	81, 84, 93, 95, 97, 102, 108, 110, 
	112, 120, 128, 136, 139, 142, 148, 154, 
	160, 168, 175, 184, 192, 200, 208, 217, 
	225, 234, 243, 246, 252, 261, 269, 278, 
	287, 294, 303, 311, 319, 328, 336, 344, 
	352, 360, 369, 372, 375, 381, 387, 393, 
	401, 408, 417, 425, 433, 441, 450, 458, 
	467, 470, 476, 485, 493, 502, 510, 519, 
	528, 537, 545, 551, 558, 566, 573, 582, 
	584, 586, 591, 597, 599, 601, 609, 617, 
	625, 628, 631, 637, 643, 649, 657, 664, 
	673, 681, 689, 697, 706, 714, 723, 726, 
	732, 741, 749, 758, 767, 774, 783, 791, 
	799, 808, 816, 824, 832, 840, 849, 852, 
	855, 861, 867, 873, 881, 888, 897, 905, 
	913, 921, 930, 938, 947, 950, 956, 965, 
	973, 982, 990, 999, 1008, 1017, 1025, 1031, 
	1037, 1043, 1049, 1056, 1064, 1071, 1080, 1082, 
	1084, 1089, 1095, 1097, 1099, 1107, 1115, 1123, 
	1126, 1129, 1135, 1141, 1147, 1155, 1162, 1171, 
	1179, 1187, 1195, 1204, 1212, 1221, 1230, 1233, 
	1239, 1248, 1256, 1265, 1274, 1281, 1290, 1298, 
	1307, 1315, 1323, 1331, 1334, 1337, 1343, 1349, 
	1355, 1363, 1370, 1379, 1387, 1395, 1403, 1409, 
	1417, 1424, 1433, 1441, 1449, 1457, 1460, 1466, 
	1474, 1482, 1489, 1498, 1506, 1514, 1522, 1525, 
	1528, 1534, 1540, 1546, 1554, 1561, 1570, 1578, 
	1586, 1594, 1603, 1611, 1620, 1629, 1632, 1638, 
	1647, 1655, 1664, 1673, 1676, 1682, 1691, 1699, 
	1708, 1711, 1717, 1726, 1734, 1743, 1752, 1755, 
	1761, 1770, 1778, 1787, 1795, 1803, 1811, 1819, 
	1828, 1836, 1839, 1842, 1848, 1854, 1860, 1868, 
	1875, 1884, 1892, 1900, 1908, 1917, 1925, 1934, 
	1943, 1946, 1952, 1961, 1970, 1978, 1986, 1995, 
	2003, 2012, 2020, 2029, 2038, 2047, 2055, 2061, 
	2068, 2077, 2085, 2093, 2102, 2110, 2119, 2128, 
	2137, 2145, 2151, 2157, 2163, 2169, 2175
]

class << self
	attr_accessor :_parser_trans_targs
	private :_parser_trans_targs, :_parser_trans_targs=
end
self._parser_trans_targs = [
	307, 1, 7, 10, 294, 305, 306, 0, 
	2, 307, 3, 0, 0, 152, 2, 308, 
	3, 7, 10, 82, 150, 151, 0, 4, 
	308, 3, 0, 0, 5, 4, 0, 7, 
	10, 12, 0, 6, 309, 3, 0, 0, 
	0, 6, 9, 8, 9, 8, 310, 3, 
	0, 9, 11, 9, 11, 0, 18, 22, 
	0, 0, 13, 14, 0, 16, 47, 0, 
	47, 13, 14, 18, 22, 0, 17, 0, 
	17, 15, 14, 0, 16, 17, 0, 17, 
	15, 310, 3, 0, 14, 18, 24, 15, 
	16, 17, 0, 17, 15, 20, 19, 20, 
	19, 14, 16, 21, 21, 0, 21, 18, 
	22, 0, 0, 15, 20, 23, 20, 23, 
	26, 23, 15, 16, 46, 23, 46, 25, 
	26, 23, 15, 16, 46, 23, 46, 25, 
	26, 27, 20, 23, 44, 23, 44, 25, 
	29, 31, 28, 29, 31, 28, 26, 20, 
	16, 30, 30, 23, 30, 27, 20, 23, 
	23, 25, 32, 20, 16, 43, 43, 19, 
	32, 20, 42, 19, 34, 19, 34, 33, 
	32, 20, 16, 34, 19, 34, 33, 32, 
	20, 35, 33, 16, 34, 19, 34, 33, 
	37, 29, 33, 16, 41, 28, 41, 36, 
	37, 29, 33, 16, 41, 28, 41, 36, 
	37, 29, 31, 28, 38, 28, 38, 36, 
	39, 20, 31, 36, 16, 41, 28, 41, 
	36, 39, 29, 31, 28, 40, 28, 40, 
	36, 39, 20, 33, 36, 16, 41, 28, 
	41, 36, 39, 29, 33, 36, 16, 41, 
	28, 41, 36, 29, 31, 28, 43, 20, 
	42, 19, 19, 33, 45, 27, 20, 25, 
	16, 46, 23, 46, 25, 45, 27, 20, 
	23, 46, 23, 46, 25, 45, 27, 15, 
	25, 16, 46, 23, 46, 25, 14, 18, 
	53, 13, 16, 80, 0, 80, 48, 14, 
	0, 16, 49, 0, 49, 48, 14, 18, 
	50, 48, 16, 49, 0, 49, 48, 26, 
	23, 48, 16, 52, 23, 52, 51, 26, 
	23, 48, 16, 52, 23, 52, 51, 45, 
	27, 48, 51, 16, 52, 23, 52, 51, 
	55, 23, 13, 16, 74, 23, 74, 54, 
	55, 23, 13, 16, 74, 23, 74, 54, 
	55, 58, 20, 23, 57, 23, 57, 56, 
	55, 23, 15, 16, 57, 23, 57, 56, 
	55, 58, 20, 56, 16, 57, 23, 57, 
	56, 60, 62, 59, 60, 62, 59, 55, 
	20, 16, 61, 61, 23, 61, 58, 20, 
	23, 23, 56, 63, 20, 16, 73, 73, 
	19, 63, 20, 72, 19, 65, 19, 65, 
	64, 63, 20, 16, 65, 19, 65, 64, 
	63, 20, 66, 64, 16, 65, 19, 65, 
	64, 68, 60, 64, 16, 71, 59, 71, 
	67, 68, 60, 64, 16, 71, 59, 71, 
	67, 68, 20, 62, 59, 69, 59, 69, 
	67, 70, 20, 62, 67, 16, 71, 59, 
	71, 67, 70, 20, 62, 59, 71, 59, 
	71, 67, 70, 20, 64, 67, 16, 71, 
	59, 71, 67, 60, 62, 59, 73, 20, 
	72, 19, 19, 64, 77, 58, 13, 54, 
	16, 79, 23, 79, 75, 55, 23, 48, 
	16, 76, 23, 76, 75, 55, 58, 13, 
	75, 16, 76, 23, 76, 75, 77, 58, 
	20, 23, 78, 23, 78, 56, 55, 58, 
	15, 56, 16, 57, 23, 57, 56, 77, 
	58, 48, 75, 16, 76, 23, 76, 75, 
	14, 18, 81, 48, 16, 49, 0, 49, 
	48, 55, 23, 48, 16, 76, 23, 76, 
	75, 0, 87, 91, 0, 0, 83, 84, 
	0, 16, 115, 0, 115, 83, 84, 87, 
	91, 0, 86, 0, 86, 85, 84, 0, 
	16, 86, 0, 86, 85, 84, 87, 93, 
	85, 16, 86, 0, 86, 85, 89, 88, 
	89, 88, 84, 16, 90, 90, 0, 90, 
	87, 91, 0, 0, 85, 89, 92, 89, 
	92, 95, 92, 85, 16, 114, 92, 114, 
	94, 95, 92, 85, 16, 114, 92, 114, 
	94, 95, 96, 89, 92, 112, 92, 112, 
	94, 98, 100, 97, 98, 100, 97, 95, 
	89, 16, 99, 99, 92, 99, 96, 89, 
	92, 92, 94, 101, 89, 16, 111, 111, 
	88, 101, 89, 110, 88, 103, 88, 103, 
	102, 101, 89, 16, 103, 88, 103, 102, 
	101, 89, 104, 102, 16, 103, 88, 103, 
	102, 106, 98, 102, 16, 109, 97, 109, 
	105, 106, 98, 102, 16, 109, 97, 109, 
	105, 106, 98, 100, 97, 107, 97, 107, 
	105, 108, 98, 100, 105, 16, 109, 97, 
	109, 105, 108, 98, 100, 97, 109, 97, 
	109, 105, 108, 98, 102, 105, 16, 109, 
	97, 109, 105, 98, 100, 97, 111, 89, 
	110, 88, 88, 102, 113, 96, 89, 94, 
	16, 114, 92, 114, 94, 113, 96, 89, 
	92, 114, 92, 114, 94, 113, 96, 85, 
	94, 16, 114, 92, 114, 94, 84, 87, 
	121, 83, 16, 148, 0, 148, 116, 84, 
	0, 16, 117, 0, 117, 116, 84, 87, 
	118, 116, 16, 117, 0, 117, 116, 95, 
	92, 116, 16, 120, 92, 120, 119, 95, 
	92, 116, 16, 120, 92, 120, 119, 113, 
	96, 116, 119, 16, 120, 92, 120, 119, 
	123, 92, 83, 16, 142, 92, 142, 122, 
	123, 92, 83, 16, 142, 92, 142, 122, 
	123, 126, 89, 92, 125, 92, 125, 124, 
	123, 92, 85, 16, 125, 92, 125, 124, 
	123, 126, 89, 124, 16, 125, 92, 125, 
	124, 128, 130, 127, 128, 130, 127, 123, 
	89, 16, 129, 129, 92, 129, 126, 89, 
	92, 92, 124, 131, 89, 16, 141, 141, 
	88, 131, 89, 140, 88, 133, 88, 133, 
	132, 131, 89, 16, 133, 88, 133, 132, 
	131, 89, 134, 132, 16, 133, 88, 133, 
	132, 136, 128, 132, 16, 139, 127, 139, 
	135, 136, 128, 132, 16, 139, 127, 139, 
	135, 136, 89, 130, 127, 137, 127, 137, 
	135, 138, 89, 130, 135, 16, 139, 127, 
	139, 135, 138, 89, 130, 127, 139, 127, 
	139, 135, 138, 89, 132, 135, 16, 139, 
	127, 139, 135, 128, 130, 127, 141, 89, 
	140, 88, 88, 132, 145, 126, 83, 122, 
	16, 147, 92, 147, 143, 123, 92, 116, 
	16, 144, 92, 144, 143, 123, 126, 83, 
	143, 16, 144, 92, 144, 143, 145, 126, 
	89, 92, 146, 92, 146, 124, 123, 126, 
	85, 124, 16, 125, 92, 125, 124, 145, 
	126, 116, 143, 16, 144, 92, 144, 143, 
	84, 87, 149, 116, 16, 117, 0, 117, 
	116, 123, 92, 116, 16, 144, 92, 144, 
	143, 0, 7, 10, 82, 0, 4, 0, 
	7, 10, 82, 0, 4, 0, 7, 10, 
	153, 0, 6, 0, 158, 162, 0, 0, 
	154, 155, 0, 16, 187, 0, 187, 154, 
	155, 158, 162, 0, 157, 0, 157, 156, 
	155, 0, 16, 157, 0, 157, 156, 155, 
	158, 164, 156, 16, 157, 0, 157, 156, 
	160, 159, 160, 159, 155, 16, 161, 161, 
	0, 161, 158, 162, 0, 0, 156, 160, 
	163, 160, 163, 166, 163, 156, 16, 186, 
	163, 186, 165, 166, 163, 156, 16, 186, 
	163, 186, 165, 166, 167, 160, 163, 184, 
	163, 184, 165, 169, 171, 168, 169, 171, 
	168, 166, 160, 16, 170, 170, 163, 170, 
	167, 160, 163, 163, 165, 172, 160, 16, 
	183, 183, 159, 172, 160, 182, 159, 174, 
	159, 174, 173, 172, 160, 16, 174, 159, 
	174, 173, 172, 160, 175, 173, 16, 174, 
	159, 174, 173, 177, 169, 173, 16, 181, 
	168, 181, 176, 177, 169, 173, 16, 181, 
	168, 181, 176, 177, 169, 160, 168, 178, 
	168, 178, 176, 179, 169, 171, 176, 16, 
	181, 168, 181, 176, 179, 169, 160, 168, 
	180, 168, 180, 176, 179, 169, 173, 176, 
	16, 181, 168, 181, 176, 179, 169, 156, 
	176, 16, 181, 168, 181, 176, 169, 171, 
	168, 183, 160, 182, 159, 159, 173, 185, 
	167, 160, 165, 16, 186, 163, 186, 165, 
	185, 167, 160, 163, 186, 163, 186, 165, 
	185, 167, 156, 165, 16, 186, 163, 186, 
	165, 190, 158, 284, 154, 16, 292, 0, 
	292, 188, 155, 0, 16, 189, 0, 189, 
	188, 190, 158, 259, 188, 16, 189, 0, 
	189, 188, 190, 158, 162, 0, 191, 0, 
	191, 156, 155, 158, 192, 156, 16, 157, 
	0, 157, 156, 194, 163, 156, 16, 258, 
	163, 258, 193, 194, 163, 156, 16, 258, 
	163, 258, 193, 194, 195, 160, 163, 256, 
	163, 256, 193, 197, 199, 196, 197, 199, 
	196, 194, 160, 16, 198, 198, 163, 198, 
	195, 160, 163, 163, 193, 200, 160, 16, 
	255, 255, 159, 200, 160, 254, 159, 202, 
	159, 202, 201, 200, 160, 16, 202, 159, 
	202, 201, 200, 160, 203, 201, 16, 202, 
	159, 202, 201, 205, 197, 201, 16, 253, 
	196, 253, 204, 205, 197, 201, 16, 253, 
	196, 253, 204, 205, 197, 206, 196, 250, 
	196, 250, 204, 207, 160, 16, 249, 249, 
	159, 207, 160, 248, 159, 209, 159, 209, 
	208, 207, 160, 16, 209, 159, 209, 208, 
	207, 160, 210, 208, 16, 209, 159, 209, 
	208, 212, 214, 208, 16, 247, 213, 247, 
	211, 212, 214, 208, 16, 247, 213, 247, 
	211, 212, 160, 206, 213, 245, 213, 245, 
	211, 214, 206, 213, 215, 160, 16, 244, 
	244, 163, 215, 243, 160, 163, 242, 163, 
	242, 216, 215, 163, 217, 16, 242, 163, 
	242, 216, 155, 0, 16, 218, 0, 218, 
	156, 190, 158, 219, 156, 16, 191, 0, 
	191, 156, 221, 163, 217, 16, 241, 163, 
	241, 220, 221, 163, 217, 16, 241, 163, 
	241, 220, 221, 222, 160, 163, 239, 163, 
	239, 220, 224, 226, 223, 224, 226, 223, 
	221, 160, 16, 225, 225, 163, 225, 222, 
	160, 163, 163, 220, 227, 160, 16, 238, 
	238, 159, 227, 160, 237, 159, 229, 159, 
	229, 228, 227, 160, 16, 229, 159, 229, 
	228, 227, 160, 230, 228, 16, 229, 159, 
	229, 228, 232, 224, 228, 16, 236, 223, 
	236, 231, 232, 224, 228, 16, 236, 223, 
	236, 231, 232, 169, 160, 223, 233, 223, 
	233, 231, 234, 169, 226, 231, 16, 236, 
	223, 236, 231, 234, 169, 160, 223, 235, 
	223, 235, 231, 234, 169, 228, 231, 16, 
	236, 223, 236, 231, 234, 169, 156, 231, 
	16, 236, 223, 236, 231, 224, 226, 223, 
	238, 160, 237, 159, 159, 228, 240, 222, 
	160, 220, 16, 241, 163, 241, 220, 240, 
	222, 160, 163, 241, 163, 241, 220, 240, 
	222, 217, 220, 16, 241, 163, 241, 220, 
	215, 243, 160, 216, 16, 242, 163, 242, 
	216, 214, 206, 213, 244, 243, 160, 163, 
	163, 216, 246, 160, 206, 211, 16, 247, 
	213, 247, 211, 246, 160, 206, 213, 247, 
	213, 247, 211, 246, 160, 208, 211, 16, 
	247, 213, 247, 211, 214, 206, 213, 249, 
	160, 248, 159, 159, 208, 251, 197, 199, 
	204, 16, 253, 196, 253, 204, 251, 197, 
	206, 196, 252, 196, 252, 204, 251, 197, 
	201, 204, 16, 253, 196, 253, 204, 251, 
	197, 208, 204, 16, 253, 196, 253, 204, 
	197, 199, 196, 255, 160, 254, 159, 159, 
	201, 257, 195, 160, 193, 16, 258, 163, 
	258, 193, 257, 195, 160, 163, 258, 163, 
	258, 193, 257, 195, 156, 193, 16, 258, 
	163, 258, 193, 261, 163, 188, 16, 283, 
	163, 283, 260, 261, 163, 188, 16, 283, 
	163, 283, 260, 261, 265, 160, 163, 282, 
	163, 282, 262, 261, 163, 217, 16, 263, 
	163, 263, 262, 264, 265, 217, 262, 16, 
	263, 163, 263, 262, 264, 265, 160, 163, 
	263, 163, 263, 262, 267, 269, 266, 267, 
	269, 266, 261, 160, 16, 268, 268, 163, 
	268, 265, 160, 163, 163, 262, 270, 160, 
	16, 281, 281, 159, 270, 160, 280, 159, 
	272, 159, 272, 271, 270, 160, 16, 272, 
	159, 272, 271, 270, 160, 273, 271, 16, 
	272, 159, 272, 271, 275, 267, 271, 16, 
	279, 266, 279, 274, 275, 267, 271, 16, 
	279, 266, 279, 274, 275, 197, 206, 266, 
	276, 266, 276, 274, 277, 197, 269, 274, 
	16, 279, 266, 279, 274, 277, 197, 206, 
	266, 278, 266, 278, 274, 277, 197, 271, 
	274, 16, 279, 266, 279, 274, 277, 197, 
	208, 274, 16, 279, 266, 279, 274, 267, 
	269, 266, 281, 160, 280, 159, 159, 271, 
	264, 265, 160, 262, 16, 263, 163, 263, 
	262, 264, 265, 217, 260, 16, 283, 163, 
	283, 260, 215, 163, 154, 16, 286, 163, 
	286, 285, 215, 163, 154, 16, 286, 163, 
	286, 285, 289, 243, 160, 285, 16, 291, 
	163, 291, 287, 215, 163, 188, 16, 288, 
	163, 288, 287, 289, 243, 160, 287, 16, 
	291, 163, 291, 287, 289, 243, 160, 163, 
	290, 163, 290, 216, 215, 243, 217, 216, 
	16, 242, 163, 242, 216, 289, 243, 217, 
	287, 16, 291, 163, 291, 287, 190, 158, 
	293, 188, 16, 189, 0, 189, 188, 215, 
	163, 188, 16, 288, 163, 288, 287, 0, 
	87, 91, 0, 0, 295, 84, 0, 16, 
	296, 0, 296, 295, 84, 87, 297, 295, 
	16, 303, 0, 303, 116, 123, 92, 295, 
	16, 299, 92, 299, 298, 123, 92, 295, 
	16, 299, 92, 299, 298, 145, 126, 295, 
	298, 16, 302, 92, 302, 300, 123, 92, 
	116, 16, 301, 92, 301, 300, 123, 126, 
	89, 300, 16, 301, 92, 301, 300, 145, 
	126, 116, 300, 16, 301, 92, 301, 300, 
	84, 87, 304, 116, 16, 117, 0, 117, 
	116, 123, 92, 116, 16, 301, 92, 301, 
	300, 0, 7, 10, 294, 0, 2, 0, 
	7, 10, 294, 0, 2, 307, 3, 0, 
	0, 152, 2, 308, 3, 0, 0, 5, 
	4, 309, 3, 0, 0, 0, 6, 0, 
	0
]

class << self
	attr_accessor :_parser_trans_actions
	private :_parser_trans_actions, :_parser_trans_actions=
end
self._parser_trans_actions = [
	49, 0, 53, 53, 53, 0, 0, 7, 
	49, 12, 12, 7, 7, 9, 0, 49, 
	0, 53, 53, 53, 0, 0, 7, 49, 
	12, 12, 7, 7, 9, 0, 0, 5, 
	5, 5, 0, 1, 12, 12, 7, 7, 
	7, 0, 25, 1, 15, 0, 3, 3, 
	7, 25, 1, 15, 0, 0, 5, 5, 
	0, 0, 1, 12, 0, 33, 12, 0, 
	12, 0, 0, 5, 5, 0, 1, 0, 
	1, 1, 12, 0, 33, 12, 0, 12, 
	0, 0, 0, 7, 12, 5, 5, 0, 
	33, 21, 0, 21, 1, 25, 1, 15, 
	0, 3, 18, 3, 3, 0, 0, 5, 
	5, 0, 0, 1, 25, 1, 15, 0, 
	21, 1, 25, 33, 21, 1, 21, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	25, 25, 1, 15, 15, 0, 3, 15, 
	18, 3, 3, 0, 0, 5, 15, 0, 
	0, 1, 3, 15, 18, 3, 3, 0, 
	0, 15, 5, 0, 1, 0, 1, 1, 
	12, 15, 33, 12, 0, 12, 0, 12, 
	15, 5, 0, 33, 21, 0, 21, 1, 
	21, 37, 25, 33, 21, 1, 21, 1, 
	12, 15, 15, 33, 12, 0, 12, 0, 
	0, 15, 15, 0, 1, 0, 1, 1, 
	12, 15, 15, 0, 33, 21, 0, 21, 
	1, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 37, 25, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 0, 5, 15, 
	0, 1, 0, 1, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 12, 
	0, 33, 12, 0, 12, 0, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 29, 
	1, 25, 33, 29, 1, 29, 1, 12, 
	0, 15, 33, 12, 0, 12, 0, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	29, 1, 25, 33, 29, 1, 29, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 25, 25, 1, 15, 15, 0, 3, 
	15, 18, 3, 3, 0, 0, 5, 15, 
	0, 0, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 37, 25, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 12, 0, 15, 
	33, 12, 0, 12, 0, 12, 5, 15, 
	0, 33, 29, 0, 29, 1, 0, 5, 
	15, 0, 1, 0, 1, 1, 12, 5, 
	15, 0, 33, 21, 0, 21, 1, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	12, 5, 5, 0, 33, 29, 0, 29, 
	1, 29, 1, 25, 33, 29, 1, 29, 
	1, 0, 5, 5, 0, 0, 1, 12, 
	0, 33, 12, 0, 12, 0, 0, 5, 
	5, 0, 1, 0, 1, 1, 12, 0, 
	33, 12, 0, 12, 0, 12, 5, 5, 
	0, 33, 21, 0, 21, 1, 25, 1, 
	15, 0, 3, 18, 3, 3, 0, 0, 
	5, 5, 0, 0, 1, 25, 1, 15, 
	0, 21, 1, 25, 33, 21, 1, 21, 
	1, 12, 0, 15, 33, 12, 0, 12, 
	0, 0, 5, 15, 0, 1, 0, 1, 
	1, 25, 25, 1, 15, 15, 0, 3, 
	15, 18, 3, 3, 0, 0, 5, 15, 
	0, 0, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 37, 25, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 0, 5, 15, 
	0, 1, 0, 1, 1, 12, 5, 15, 
	0, 33, 21, 0, 21, 1, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 12, 
	0, 33, 12, 0, 12, 0, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 29, 
	1, 25, 33, 29, 1, 29, 1, 12, 
	0, 15, 33, 12, 0, 12, 0, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	29, 1, 25, 33, 29, 1, 29, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	12, 0, 15, 33, 12, 0, 12, 0, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 25, 25, 1, 15, 15, 0, 3, 
	15, 18, 3, 3, 0, 0, 5, 15, 
	0, 0, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 12, 15, 15, 0, 33, 21, 0, 
	21, 1, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 37, 25, 1, 0, 15, 
	5, 0, 0, 1, 12, 5, 15, 0, 
	33, 29, 0, 29, 1, 12, 0, 15, 
	33, 12, 0, 12, 0, 12, 5, 15, 
	0, 33, 29, 0, 29, 1, 0, 5, 
	15, 0, 1, 0, 1, 1, 12, 5, 
	15, 0, 33, 21, 0, 21, 1, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	12, 5, 5, 0, 33, 29, 0, 29, 
	1, 29, 1, 25, 33, 29, 1, 29, 
	1, 0, 53, 53, 53, 0, 49, 0, 
	45, 45, 45, 0, 41, 0, 5, 5, 
	5, 0, 1, 0, 5, 5, 0, 0, 
	1, 12, 0, 33, 12, 0, 12, 0, 
	0, 5, 5, 0, 1, 0, 1, 1, 
	12, 0, 33, 12, 0, 12, 0, 12, 
	5, 5, 0, 33, 21, 0, 21, 1, 
	25, 1, 15, 0, 3, 18, 3, 3, 
	0, 0, 5, 5, 0, 0, 1, 25, 
	1, 15, 0, 21, 1, 25, 33, 21, 
	1, 21, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 0, 5, 15, 0, 1, 
	0, 1, 1, 25, 25, 1, 15, 15, 
	0, 3, 15, 18, 3, 3, 0, 0, 
	5, 15, 0, 0, 1, 3, 15, 18, 
	3, 3, 0, 0, 15, 5, 0, 1, 
	0, 1, 1, 12, 15, 33, 12, 0, 
	12, 0, 12, 15, 5, 0, 33, 21, 
	0, 21, 1, 21, 37, 25, 33, 21, 
	1, 21, 1, 12, 15, 15, 33, 12, 
	0, 12, 0, 0, 15, 15, 0, 1, 
	0, 1, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 0, 15, 15, 0, 
	1, 0, 1, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 37, 25, 
	1, 0, 15, 5, 0, 0, 1, 12, 
	5, 15, 0, 33, 21, 0, 21, 1, 
	0, 5, 15, 0, 1, 0, 1, 1, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 12, 5, 5, 0, 33, 29, 0, 
	29, 1, 12, 0, 33, 12, 0, 12, 
	0, 12, 5, 5, 0, 33, 29, 0, 
	29, 1, 0, 5, 5, 0, 1, 0, 
	1, 1, 12, 5, 5, 0, 33, 21, 
	0, 21, 1, 21, 1, 25, 33, 21, 
	1, 21, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 0, 5, 15, 0, 1, 
	0, 1, 1, 25, 25, 1, 15, 15, 
	0, 3, 15, 18, 3, 3, 0, 0, 
	5, 15, 0, 0, 1, 3, 15, 18, 
	3, 3, 0, 0, 15, 5, 0, 1, 
	0, 1, 1, 12, 15, 33, 12, 0, 
	12, 0, 12, 15, 5, 0, 33, 21, 
	0, 21, 1, 21, 37, 25, 33, 21, 
	1, 21, 1, 12, 15, 15, 33, 12, 
	0, 12, 0, 0, 15, 15, 0, 1, 
	0, 1, 1, 3, 15, 18, 3, 3, 
	0, 0, 15, 5, 0, 1, 0, 1, 
	1, 12, 15, 33, 12, 0, 12, 0, 
	12, 15, 5, 0, 33, 21, 0, 21, 
	1, 21, 37, 25, 33, 21, 1, 21, 
	1, 12, 15, 15, 33, 12, 0, 12, 
	0, 0, 15, 15, 0, 1, 0, 1, 
	1, 15, 15, 0, 3, 15, 18, 3, 
	3, 0, 0, 5, 15, 0, 1, 0, 
	1, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 12, 0, 33, 12, 0, 12, 
	0, 12, 5, 5, 0, 33, 21, 0, 
	21, 1, 21, 1, 25, 33, 21, 1, 
	21, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 0, 5, 15, 0, 1, 0, 
	1, 1, 25, 25, 1, 15, 15, 0, 
	3, 15, 18, 3, 3, 0, 0, 5, 
	15, 0, 0, 1, 3, 15, 18, 3, 
	3, 0, 0, 15, 5, 0, 1, 0, 
	1, 1, 12, 15, 33, 12, 0, 12, 
	0, 12, 15, 5, 0, 33, 21, 0, 
	21, 1, 21, 37, 25, 33, 21, 1, 
	21, 1, 12, 15, 15, 33, 12, 0, 
	12, 0, 0, 15, 15, 0, 1, 0, 
	1, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 0, 15, 15, 0, 1, 
	0, 1, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 37, 25, 1, 
	0, 15, 5, 0, 0, 1, 12, 5, 
	15, 0, 33, 21, 0, 21, 1, 0, 
	5, 15, 0, 1, 0, 1, 1, 12, 
	5, 15, 0, 33, 21, 0, 21, 1, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 25, 25, 1, 0, 5, 15, 0, 
	0, 1, 12, 15, 15, 0, 33, 21, 
	0, 21, 1, 0, 15, 15, 0, 1, 
	0, 1, 1, 12, 15, 15, 0, 33, 
	21, 0, 21, 1, 37, 25, 1, 0, 
	15, 5, 0, 0, 1, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 0, 15, 
	15, 0, 1, 0, 1, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 12, 
	15, 15, 0, 33, 21, 0, 21, 1, 
	37, 25, 1, 0, 15, 5, 0, 0, 
	1, 12, 5, 15, 0, 33, 21, 0, 
	21, 1, 0, 5, 15, 0, 1, 0, 
	1, 1, 12, 5, 15, 0, 33, 21, 
	0, 21, 1, 29, 1, 25, 33, 29, 
	1, 29, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 0, 5, 15, 0, 1, 
	0, 1, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 12, 5, 15, 0, 33, 
	21, 0, 21, 1, 0, 5, 15, 0, 
	1, 0, 1, 1, 25, 25, 1, 15, 
	15, 0, 3, 15, 18, 3, 3, 0, 
	0, 5, 15, 0, 0, 1, 3, 15, 
	18, 3, 3, 0, 0, 15, 5, 0, 
	1, 0, 1, 1, 12, 15, 33, 12, 
	0, 12, 0, 12, 15, 5, 0, 33, 
	21, 0, 21, 1, 21, 37, 25, 33, 
	21, 1, 21, 1, 12, 15, 15, 33, 
	12, 0, 12, 0, 0, 15, 15, 0, 
	1, 0, 1, 1, 12, 15, 15, 0, 
	33, 21, 0, 21, 1, 0, 15, 15, 
	0, 1, 0, 1, 1, 12, 15, 15, 
	0, 33, 21, 0, 21, 1, 12, 15, 
	15, 0, 33, 21, 0, 21, 1, 37, 
	25, 1, 0, 15, 5, 0, 0, 1, 
	12, 5, 15, 0, 33, 21, 0, 21, 
	1, 12, 5, 15, 0, 33, 29, 0, 
	29, 1, 29, 1, 25, 33, 29, 1, 
	29, 1, 12, 0, 15, 33, 12, 0, 
	12, 0, 12, 5, 15, 0, 33, 29, 
	0, 29, 1, 12, 0, 15, 33, 12, 
	0, 12, 0, 12, 5, 15, 0, 33, 
	29, 0, 29, 1, 0, 5, 15, 0, 
	1, 0, 1, 1, 12, 5, 15, 0, 
	33, 21, 0, 21, 1, 12, 5, 15, 
	0, 33, 29, 0, 29, 1, 12, 5, 
	5, 0, 33, 29, 0, 29, 1, 29, 
	1, 25, 33, 29, 1, 29, 1, 0, 
	5, 5, 0, 0, 1, 12, 0, 33, 
	12, 0, 12, 0, 12, 5, 5, 0, 
	33, 29, 0, 29, 1, 29, 1, 25, 
	33, 29, 1, 29, 1, 12, 0, 15, 
	33, 12, 0, 12, 0, 12, 5, 15, 
	0, 33, 29, 0, 29, 1, 12, 0, 
	15, 33, 12, 0, 12, 0, 12, 5, 
	15, 0, 33, 29, 0, 29, 1, 12, 
	5, 15, 0, 33, 29, 0, 29, 1, 
	12, 5, 5, 0, 33, 29, 0, 29, 
	1, 29, 1, 25, 33, 29, 1, 29, 
	1, 0, 53, 53, 53, 0, 49, 0, 
	45, 45, 45, 0, 41, 12, 12, 7, 
	7, 9, 0, 12, 12, 7, 7, 9, 
	0, 12, 12, 7, 7, 7, 0, 0, 
	0
]

class << self
	attr_accessor :_parser_eof_actions
	private :_parser_eof_actions, :_parser_eof_actions=
end
self._parser_eof_actions = [
	0, 7, 7, 7, 7, 0, 7, 0, 
	0, 7, 0, 0, 0, 0, 0, 0, 
	7, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0
]

class << self
	attr_accessor :parser_start
end
self.parser_start = 1;
class << self
	attr_accessor :parser_first_final
end
self.parser_first_final = 307;
class << self
	attr_accessor :parser_error
end
self.parser_error = 0;

class << self
	attr_accessor :parser_en_main
end
self.parser_en_main = 1;

# line 91 "lib/keyword_search.rl"
    	p = 0
      eof = nil
      word = nil
    	pe = data.length
    	key = nil
      positive_match = nil
    	tokstart = nil
    	results = {}
    	quotes = 0
      
# line 1106 "lib/keyword_search.rb"
begin
	p ||= 0
	pe ||= data.length
	cs = parser_start
end
# line 101 "lib/keyword_search.rl"
      
# line 1114 "lib/keyword_search.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if p == pe
		_goto_level = _test_eof
		next
	end
	if cs == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_keys = _parser_key_offsets[cs]
	_trans = _parser_index_offsets[cs]
	_klen = _parser_single_lengths[cs]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if data[p].ord < _parser_trans_keys[_mid].ord
	           _upper = _mid - 1
	        elsif data[p].ord > _parser_trans_keys[_mid].ord
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _parser_range_lengths[cs]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if data[p].ord < _parser_trans_keys[_mid].ord
	          _upper = _mid - 2
	        elsif data[p].ord > _parser_trans_keys[_mid+1].ord
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	cs = _parser_trans_targs[_trans]
	if _parser_trans_actions[_trans] != 0
		_acts = _parser_trans_actions[_trans]
		_nacts = _parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _parser_actions[_acts - 1]
when 0 then
# line 13 "lib/keyword_search.rl"
		begin

        tokstart = p;
      		end
# line 13 "lib/keyword_search.rl"
when 1 then
# line 17 "lib/keyword_search.rl"
		begin

        key = word
        results[key] ||= []
      		end
# line 17 "lib/keyword_search.rl"
when 2 then
# line 22 "lib/keyword_search.rl"
		begin

        key = nil
      		end
# line 22 "lib/keyword_search.rl"
when 3 then
# line 26 "lib/keyword_search.rl"
		begin

        word = data[tokstart..p-1]
      		end
# line 26 "lib/keyword_search.rl"
when 4 then
# line 30 "lib/keyword_search.rl"
		begin

        (results[key || :default] ||= []) << [ word, positive_match ]
      		end
# line 30 "lib/keyword_search.rl"
when 5 then
# line 34 "lib/keyword_search.rl"
		begin

        positive_match = false
      		end
# line 34 "lib/keyword_search.rl"
when 6 then
# line 38 "lib/keyword_search.rl"
		begin

        positive_match = true
      		end
# line 38 "lib/keyword_search.rl"
when 7 then
# line 42 "lib/keyword_search.rl"
		begin
 quotes += 1 		end
# line 42 "lib/keyword_search.rl"
when 8 then
# line 44 "lib/keyword_search.rl"
		begin
 quotes -= 1 		end
# line 44 "lib/keyword_search.rl"
when 9 then
# line 71 "lib/keyword_search.rl"
		begin
 raise ParseError, "At offset #{p}, near: '#{data[p,10]}'" 		end
# line 71 "lib/keyword_search.rl"
# line 1259 "lib/keyword_search.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	if cs == 0
		_goto_level = _out
		next
	end
	p += 1
	if p != pe
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if p == eof
	__acts = _parser_eof_actions[cs]
	__nacts =  _parser_actions[__acts]
	__acts += 1
	while __nacts > 0
		__nacts -= 1
		__acts += 1
		case _parser_actions[__acts - 1]
when 9 then
# line 71 "lib/keyword_search.rl"
		begin
 raise ParseError, "At offset #{p}, near: '#{data[p,10]}'" 		end
# line 71 "lib/keyword_search.rl"
# line 1292 "lib/keyword_search.rb"
		end # eof action switch
	end
	if _trigger_goto
		next
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 102 "lib/keyword_search.rl"
    	unless quotes.zero?
    	  raise ParseError, "Unclosed quotes"
    	end
    	results
    end
    
  end
  
end


